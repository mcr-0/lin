generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model Postback {
  id             Int      @id @default(autoincrement())
  offer_id       String?
  offer_name     String?
  affiliate_id   String?
  source         String?
  session_ip     String?
  payout         Float?
  createdat      DateTime @default(now()) @db.Timestamptz(0)
  aff_sub        String?
  aff_sub2       String?
  aff_sub3       String?
  aff_sub4       String?
  aff_sub5       String?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model Account {
  
  id                String   @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model Session {
  
  id             String   @id
  sessionToken   String   @unique
  userId         String
  expires        DateTime
  User           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  
  username       String    @unique
  id             String    @id
  Account        Account[]
  Session        Session[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model VerificationToken {
  
  identifier     String
  token          String   @unique
  expires        DateTime

  @@unique([identifier, token])
}
